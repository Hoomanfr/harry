services:
  centrifugo:
    container_name: centrifugo
    image: centrifugo/centrifugo:v6
    volumes:
      - ./centrifugo_config.json:/centrifugo/config.json
    command: centrifugo --config=/centrifugo/config.json
    ports:
      - 8000:8000
    environment:
      - CENTRIFUGO_CLIENT_STALE_CLOSE_DELAY=300s
    ulimits:
      nofile:
        soft: 65535
        hard: 65535
    networks: ["cenfgo"]
    depends_on:
      redis1:
        condition: service_healthy
      redis2:
        condition: service_healthy
  redis1:
    container_name: redis1
    hostname: redis1
    image: redis:7-alpine
    volumes:
      - redis1-data:/data
    networks: ["cenfgo"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis2:
    container_name: redis2
    hostname: redis2
    image: redis:7-alpine
    volumes:
      - redis2-data:/data
    networks: ["cenfgo"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
  postgresdb:
    image: postgres
    container_name: postgresdb
    hostname: postgresdb
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: admin
      POSTGRES_USER: admin
    networks: ["pgdb"]
  nats:
    image: nats
    ports:
      - "8222:8222"  # HTTP monitoring port
    command: "--cluster_name NATS --cluster nats://0.0.0.0:6222 --http_port 8222 "
    networks: ["nats"]
  nats-1:
    image: nats
    command: "--cluster_name NATS --cluster nats://0.0.0.0:6222 --routes=nats://ruser:T0pS3cr3t@nats:6222"
    networks: ["nats"]
    depends_on: ["nats"]
  nats-2:
    image: nats
    command: "--cluster_name NATS --cluster nats://0.0.0.0:6222 --routes=nats://ruser:T0pS3cr3t@nats:6222"
    networks: ["nats"]
    depends_on: ["nats"]

networks:
  nats:
    name: nats
    driver: bridge
  pgdb:
    name: pgdb
    driver: bridge
  cenfgo:
    name: cenfgo
    driver: bridge
volumes:
  redis1-data:
  redis2-data: